CCS PCM C Compiler, Version 5.109, 5967               26-Thg5-23 10:09

               Filename:   C:\Users\Minh Toan\OneDrive\desktop\main.lst

               ROM used:   92 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   041
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <main.h>
.................... #include <16F877A.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #device ADC=16
.................... 
.................... #FUSES NOWDT                 	//No Watch Dog Timer
.................... #FUSES WRT_1000              	//Program Memory Write Protected from 0 to 0x0FFF
.................... 
.................... #use delay(crystal=20000000)
.................... 
.................... 
.................... 
.................... int t = 0;
.................... #byte OPREG = 0x81
.................... #byte INTCON = 0x0b
.................... #bit INTF = INTCON.1
.................... 
.................... #INT_EXT
.................... void ngat()
.................... {
....................    if(INTF == 1)
002F:  BTFSS  0B.1
0030:  GOTO   033
....................    {
....................       t = t + 1;
0031:  MOVLW  01
0032:  ADDWF  27,F
....................       INTF == 0;//khong anh huong
....................    }
....................    if(t == 2)
0033:  MOVF   27,W
0034:  SUBLW  02
0035:  BTFSS  03.2
0036:  GOTO   03D
....................    {
....................       t = 0;
0037:  CLRF   27
....................       output_toggle(PIN_B1);
0038:  BSF    03.5
0039:  BCF    06.1
003A:  MOVLW  02
003B:  BCF    03.5
003C:  XORWF  06,F
....................    }
003D:  BCF    0B.1
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   01B
.................... }
.................... 
.................... void main()
0041:  MOVF   03,W
0042:  ANDLW  1F
0043:  MOVWF  03
0044:  CLRF   27
0045:  BSF    03.5
0046:  BSF    1F.0
0047:  BSF    1F.1
0048:  BSF    1F.2
0049:  BCF    1F.3
004A:  MOVLW  07
004B:  MOVWF  1C
004C:  BCF    03.7
.................... {
....................    OPREG = 0b11010111;
004D:  MOVLW  D7
004E:  MOVWF  01
....................    INTCON = 0b11010000;
004F:  MOVLW  D0
0050:  BCF    03.5
0051:  MOVWF  0B
....................    INTF = 0;
0052:  BCF    0B.1
....................    set_tris_b(0x01);
0053:  MOVLW  01
0054:  BSF    03.5
0055:  MOVWF  06
....................    output_high(PIN_B1);
0056:  BCF    06.1
0057:  BCF    03.5
0058:  BSF    06.1
....................    while(TRUE)
....................    {
0059:  GOTO   059
.................... //!      if(INTF == 1)
.................... //!      {
.................... //!         t = t + 1;
.................... //!         INTF = 0;
.................... //!      }
....................    }
.................... //!   set_tris_b(0x01);
.................... //!   ext_int_edge(H_TO_L);
.................... //!   enable_interrupts(GLOBAL);
.................... //!   enable_interrupts(INT_EXT);
.................... //!   output_high(PIN_B1);
....................    while(1)
....................    {
005A:  GOTO   05A
....................      
....................    }
.................... }
005B:  SLEEP

Configuration Fuses:
   Word  1: 3972   HS NOWDT PUT BROWNOUT NOLVP NOCPD WRT_1000 NODEBUG NOPROTECT
