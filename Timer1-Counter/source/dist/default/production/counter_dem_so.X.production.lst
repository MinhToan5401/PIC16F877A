

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 02 13:52:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	strings
   173     0003                     __pstrings:
   174     0003                     stringtab:
   175     0003                     __stringtab:
   176     0003                     stringcode:	
   177                           ;	String table - string pointers are 1 byte each
   178                           
   179     0003                     stringdir:
   180     0003  3000               	movlw	high stringdir
   181     0004  008A               	movwf	10
   182     0005  0804               	movf	4,w
   183     0006  0A84               	incf	4,f
   184     0007  0782               	addwf	2,f
   185     0008                     __stringbase:
   186     0008  3400               	retlw	0
   187     0009                     __end_of__stringtab:
   188     0009                     _Number:
   189     0009  34C0               	retlw	192
   190     000A  34F9               	retlw	249
   191     000B  34A4               	retlw	164
   192     000C  34B0               	retlw	176
   193     000D  3499               	retlw	153
   194     000E  3492               	retlw	146
   195     000F  3482               	retlw	130
   196     0010  34F8               	retlw	248
   197     0011  3480               	retlw	128
   198     0012  3490               	retlw	144
   199     0013                     __end_of_Number:
   200     0008                     _PORTDbits	set	8
   201     0006                     _PORTB	set	6
   202     0008                     _PORTD	set	8
   203     000E                     _TMR1L	set	14
   204     000F                     _TMR1H	set	15
   205     0010                     _T1CONbits	set	16
   206     0086                     _TRISB	set	134
   207     0088                     _TRISD	set	136
   208     009F                     _ADCON1	set	159
   209     008C                     _PIE1bits	set	140
   210                           
   211                           	psect	cinit
   212     07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07FC                     __initialization:
   216     07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219     07FC                     __end_of__initialization:
   220     07FC  0183               	clrf	3
   221     07FD  120A  118A  2ED3   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224     0070                     __pcstackCOMMON:
   225     0070                     ?_Timer1_Configuration:
   226     0070                     ??_Timer1_Configuration:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_main:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?___lwdiv:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ___lwdiv@divisor:	
   236                           ; 2 bytes @ 0x0
   237                           
   238                           
   239                           ; 2 bytes @ 0x0
   240     0070                     	ds	2
   241     0072                     ___lwdiv@dividend:
   242                           
   243                           ; 2 bytes @ 0x2
   244     0072                     	ds	2
   245     0074                     ??___lwdiv:
   246                           
   247                           ; 1 bytes @ 0x4
   248     0074                     	ds	1
   249     0075                     ___lwdiv@quotient:
   250                           
   251                           ; 2 bytes @ 0x5
   252     0075                     	ds	2
   253     0077                     ___lwdiv@counter:
   254                           
   255                           ; 1 bytes @ 0x7
   256     0077                     	ds	1
   257     0078                     ?___lwmod:
   258     0078                     ___lwmod@divisor:	
   259                           ; 2 bytes @ 0x8
   260                           
   261                           
   262                           ; 2 bytes @ 0x8
   263     0078                     	ds	2
   264     007A                     ___lwmod@dividend:
   265                           
   266                           ; 2 bytes @ 0xA
   267     007A                     	ds	2
   268     007C                     ??___lwmod:
   269                           
   270                           ; 1 bytes @ 0xC
   271     007C                     	ds	1
   272     007D                     ___lwmod@counter:
   273                           
   274                           ; 1 bytes @ 0xD
   275     007D                     	ds	1
   276                           
   277                           	psect	cstackBANK0
   278     0020                     __pcstackBANK0:
   279     0020                     ??_main:
   280                           
   281                           ; 1 bytes @ 0x0
   282     0020                     	ds	2
   283     0022                     main@counter:
   284                           
   285                           ; 2 bytes @ 0x2
   286     0022                     	ds	2
   287                           
   288                           	psect	maintext
   289     06D3                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 37 in file "code.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  counter         2    2[BANK0 ] unsigned int 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         0       2       0       0       0
   311 ;;      Temps:          0       2       0       0       0
   312 ;;      Totals:         0       4       0       0       0
   313 ;;Total ram usage:        4 bytes
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		_Timer1_Configuration
   317 ;;		___lwdiv
   318 ;;		___lwmod
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324     06D3                     _main:	
   325                           ;psect for function _main
   326                           
   327     06D3                     l802:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   330                           
   331                           
   332                           ;code.c: 40:     ADCON1 |= 0x07;
   333     06D3  3007               	movlw	7
   334     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   335     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   336     06D6  00A0               	movwf	??_main
   337     06D7  0820               	movf	??_main,w
   338     06D8  1683               	bsf	3,5	;RP0=1, select bank1
   339     06D9  1303               	bcf	3,6	;RP1=0, select bank1
   340     06DA  049F               	iorwf	31,f	;volatile
   341     06DB                     l804:
   342                           
   343                           ;code.c: 41:     unsigned int counter;;code.c: 45:     TRISD = 0x00;
   344     06DB  0188               	clrf	8	;volatile
   345     06DC                     l806:
   346                           
   347                           ;code.c: 46:     PORTD = 0x00;
   348     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   349     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   350     06DE  0188               	clrf	8	;volatile
   351     06DF                     l808:
   352                           
   353                           ;code.c: 48:     TRISB = 0x00;
   354     06DF  1683               	bsf	3,5	;RP0=1, select bank1
   355     06E0  1303               	bcf	3,6	;RP1=0, select bank1
   356     06E1  0186               	clrf	6	;volatile
   357     06E2                     l810:
   358                           
   359                           ;code.c: 49:     PORTB = 0x00;
   360     06E2  1283               	bcf	3,5	;RP0=0, select bank0
   361     06E3  1303               	bcf	3,6	;RP1=0, select bank0
   362     06E4  0186               	clrf	6	;volatile
   363     06E5                     l812:
   364                           
   365                           ;code.c: 51:     Timer1_Configuration();
   366     06E5  120A  118A  2649  120A  118A  	fcall	_Timer1_Configuration
   367     06EA                     l814:
   368                           
   369                           ;code.c: 54:     {;code.c: 55:         counter = TMR1H;
   370     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   371     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   372     06EC  080F               	movf	15,w	;volatile
   373     06ED  00A0               	movwf	??_main
   374     06EE  01A1               	clrf	??_main+1
   375     06EF  0820               	movf	??_main,w
   376     06F0  00A2               	movwf	main@counter
   377     06F1  0821               	movf	??_main+1,w
   378     06F2  00A3               	movwf	main@counter+1
   379     06F3                     l816:
   380                           
   381                           ;code.c: 56:         counter <<= 8;
   382     06F3  3008               	movlw	8
   383     06F4                     u295:
   384     06F4  1003               	clrc
   385     06F5  0DA2               	rlf	main@counter,f
   386     06F6  0DA3               	rlf	main@counter+1,f
   387     06F7  3EFF               	addlw	-1
   388     06F8  1D03               	skipz
   389     06F9  2EF4               	goto	u295
   390     06FA                     l818:
   391                           
   392                           ;code.c: 57:         counter |= TMR1L;
   393     06FA  080E               	movf	14,w	;volatile
   394     06FB  00A0               	movwf	??_main
   395     06FC  01A1               	clrf	??_main+1
   396     06FD  0820               	movf	??_main,w
   397     06FE  04A2               	iorwf	main@counter,f
   398     06FF  0821               	movf	??_main+1,w
   399     0700  04A3               	iorwf	main@counter+1,f
   400     0701                     l820:
   401                           
   402                           ;code.c: 58:         if(counter >= 10000)
   403     0701  3027               	movlw	39
   404     0702  0223               	subwf	main@counter+1,w
   405     0703  3010               	movlw	16
   406     0704  1903               	skipnz
   407     0705  0222               	subwf	main@counter,w
   408     0706  1C03               	skipc
   409     0707  2F09               	goto	u301
   410     0708  2F0A               	goto	u300
   411     0709                     u301:
   412     0709  2F10               	goto	l828
   413     070A                     u300:
   414     070A                     l822:
   415                           
   416                           ;code.c: 59:         {;code.c: 60:             counter = 0;
   417     070A  01A2               	clrf	main@counter
   418     070B  01A3               	clrf	main@counter+1
   419     070C                     l824:
   420                           
   421                           ;code.c: 61:             T1CONbits.TMR1ON = 0;
   422     070C  1010               	bcf	16,0	;volatile
   423                           
   424                           ;code.c: 62:             TMR1H = TMR1L = 0;
   425     070D  018E               	clrf	14	;volatile
   426     070E  018F               	clrf	15	;volatile
   427     070F                     l826:
   428                           
   429                           ;code.c: 63:             T1CONbits.TMR1ON = 1;
   430     070F  1410               	bsf	16,0	;volatile
   431     0710                     l828:
   432                           
   433                           ;code.c: 67:         PORTB = Number[counter/1000];
   434     0710  30E8               	movlw	232
   435     0711  00F0               	movwf	___lwdiv@divisor
   436     0712  3003               	movlw	3
   437     0713  00F1               	movwf	___lwdiv@divisor+1
   438     0714  0823               	movf	main@counter+1,w
   439     0715  00F3               	movwf	___lwdiv@dividend+1
   440     0716  0822               	movf	main@counter,w
   441     0717  00F2               	movwf	___lwdiv@dividend
   442     0718  120A  118A  268F  120A  118A  	fcall	___lwdiv
   443     071D  0870               	movf	?___lwdiv,w
   444     071E  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   445     071F  0084               	movwf	4
   446     0720  120A  118A  2003  120A  118A  	fcall	stringdir
   447     0725  1283               	bcf	3,5	;RP0=0, select bank0
   448     0726  1303               	bcf	3,6	;RP1=0, select bank0
   449     0727  0086               	movwf	6	;volatile
   450     0728                     l830:
   451                           
   452                           ;code.c: 68:         PORTDbits.RD0 = 0;
   453     0728  1008               	bcf	8,0	;volatile
   454     0729                     l832:
   455                           
   456                           ;code.c: 69:         _delay((unsigned long)((1)*(20000000/4000.0)));
   457     0729  3007               	movlw	7
   458     072A  1283               	bcf	3,5	;RP0=0, select bank0
   459     072B  1303               	bcf	3,6	;RP1=0, select bank0
   460     072C  00A1               	movwf	??_main+1
   461     072D  307C               	movlw	124
   462     072E  00A0               	movwf	??_main
   463     072F                     u317:
   464     072F  0BA0               	decfsz	??_main,f
   465     0730  2F2F               	goto	u317
   466     0731  0BA1               	decfsz	??_main+1,f
   467     0732  2F2F               	goto	u317
   468     0733  0000               	nop
   469     0734                     l834:
   470                           
   471                           ;code.c: 70:         PORTDbits.RD0 = 1;
   472     0734  1283               	bcf	3,5	;RP0=0, select bank0
   473     0735  1303               	bcf	3,6	;RP1=0, select bank0
   474     0736  1408               	bsf	8,0	;volatile
   475     0737                     l836:
   476                           
   477                           ;code.c: 71:         _delay((unsigned long)((1)*(20000000/4000.0)));
   478     0737  3007               	movlw	7
   479     0738  1283               	bcf	3,5	;RP0=0, select bank0
   480     0739  1303               	bcf	3,6	;RP1=0, select bank0
   481     073A  00A1               	movwf	??_main+1
   482     073B  307C               	movlw	124
   483     073C  00A0               	movwf	??_main
   484     073D                     u327:
   485     073D  0BA0               	decfsz	??_main,f
   486     073E  2F3D               	goto	u327
   487     073F  0BA1               	decfsz	??_main+1,f
   488     0740  2F3D               	goto	u327
   489     0741  0000               	nop
   490     0742                     l838:
   491                           
   492                           ;code.c: 73:         PORTB = Number[counter/100%10];
   493     0742  300A               	movlw	10
   494     0743  00F8               	movwf	___lwmod@divisor
   495     0744  3000               	movlw	0
   496     0745  00F9               	movwf	___lwmod@divisor+1
   497     0746  3064               	movlw	100
   498     0747  00F0               	movwf	___lwdiv@divisor
   499     0748  3000               	movlw	0
   500     0749  00F1               	movwf	___lwdiv@divisor+1
   501     074A  1283               	bcf	3,5	;RP0=0, select bank0
   502     074B  1303               	bcf	3,6	;RP1=0, select bank0
   503     074C  0823               	movf	main@counter+1,w
   504     074D  00F3               	movwf	___lwdiv@dividend+1
   505     074E  0822               	movf	main@counter,w
   506     074F  00F2               	movwf	___lwdiv@dividend
   507     0750  120A  118A  268F  120A  118A  	fcall	___lwdiv
   508     0755  0871               	movf	?___lwdiv+1,w
   509     0756  00FB               	movwf	___lwmod@dividend+1
   510     0757  0870               	movf	?___lwdiv,w
   511     0758  00FA               	movwf	___lwmod@dividend
   512     0759  120A  118A  2655  120A  118A  	fcall	___lwmod
   513     075E  0878               	movf	?___lwmod,w
   514     075F  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   515     0760  0084               	movwf	4
   516     0761  120A  118A  2003  120A  118A  	fcall	stringdir
   517     0766  1283               	bcf	3,5	;RP0=0, select bank0
   518     0767  1303               	bcf	3,6	;RP1=0, select bank0
   519     0768  0086               	movwf	6	;volatile
   520     0769                     l840:
   521                           
   522                           ;code.c: 74:         PORTDbits.RD1 = 0;
   523     0769  1088               	bcf	8,1	;volatile
   524     076A                     l842:
   525                           
   526                           ;code.c: 75:         _delay((unsigned long)((1)*(20000000/4000.0)));
   527     076A  3007               	movlw	7
   528     076B  1283               	bcf	3,5	;RP0=0, select bank0
   529     076C  1303               	bcf	3,6	;RP1=0, select bank0
   530     076D  00A1               	movwf	??_main+1
   531     076E  307C               	movlw	124
   532     076F  00A0               	movwf	??_main
   533     0770                     u337:
   534     0770  0BA0               	decfsz	??_main,f
   535     0771  2F70               	goto	u337
   536     0772  0BA1               	decfsz	??_main+1,f
   537     0773  2F70               	goto	u337
   538     0774  0000               	nop
   539     0775                     l844:
   540                           
   541                           ;code.c: 76:         PORTDbits.RD1 = 1;
   542     0775  1283               	bcf	3,5	;RP0=0, select bank0
   543     0776  1303               	bcf	3,6	;RP1=0, select bank0
   544     0777  1488               	bsf	8,1	;volatile
   545     0778                     l846:
   546                           
   547                           ;code.c: 77:         _delay((unsigned long)((1)*(20000000/4000.0)));
   548     0778  3007               	movlw	7
   549     0779  1283               	bcf	3,5	;RP0=0, select bank0
   550     077A  1303               	bcf	3,6	;RP1=0, select bank0
   551     077B  00A1               	movwf	??_main+1
   552     077C  307C               	movlw	124
   553     077D  00A0               	movwf	??_main
   554     077E                     u347:
   555     077E  0BA0               	decfsz	??_main,f
   556     077F  2F7E               	goto	u347
   557     0780  0BA1               	decfsz	??_main+1,f
   558     0781  2F7E               	goto	u347
   559     0782  0000               	nop
   560     0783                     l848:
   561                           
   562                           ;code.c: 79:         PORTB = Number[counter/10%10];
   563     0783  300A               	movlw	10
   564     0784  00F8               	movwf	___lwmod@divisor
   565     0785  3000               	movlw	0
   566     0786  00F9               	movwf	___lwmod@divisor+1
   567     0787  300A               	movlw	10
   568     0788  00F0               	movwf	___lwdiv@divisor
   569     0789  3000               	movlw	0
   570     078A  00F1               	movwf	___lwdiv@divisor+1
   571     078B  1283               	bcf	3,5	;RP0=0, select bank0
   572     078C  1303               	bcf	3,6	;RP1=0, select bank0
   573     078D  0823               	movf	main@counter+1,w
   574     078E  00F3               	movwf	___lwdiv@dividend+1
   575     078F  0822               	movf	main@counter,w
   576     0790  00F2               	movwf	___lwdiv@dividend
   577     0791  120A  118A  268F  120A  118A  	fcall	___lwdiv
   578     0796  0871               	movf	?___lwdiv+1,w
   579     0797  00FB               	movwf	___lwmod@dividend+1
   580     0798  0870               	movf	?___lwdiv,w
   581     0799  00FA               	movwf	___lwmod@dividend
   582     079A  120A  118A  2655  120A  118A  	fcall	___lwmod
   583     079F  0878               	movf	?___lwmod,w
   584     07A0  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   585     07A1  0084               	movwf	4
   586     07A2  120A  118A  2003  120A  118A  	fcall	stringdir
   587     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   588     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   589     07A9  0086               	movwf	6	;volatile
   590     07AA                     l850:
   591                           
   592                           ;code.c: 80:         PORTDbits.RD2 = 0;
   593     07AA  1108               	bcf	8,2	;volatile
   594     07AB                     l852:
   595                           
   596                           ;code.c: 81:         _delay((unsigned long)((1)*(20000000/4000.0)));
   597     07AB  3007               	movlw	7
   598     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   599     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   600     07AE  00A1               	movwf	??_main+1
   601     07AF  307C               	movlw	124
   602     07B0  00A0               	movwf	??_main
   603     07B1                     u357:
   604     07B1  0BA0               	decfsz	??_main,f
   605     07B2  2FB1               	goto	u357
   606     07B3  0BA1               	decfsz	??_main+1,f
   607     07B4  2FB1               	goto	u357
   608     07B5  0000               	nop
   609     07B6                     l854:
   610                           
   611                           ;code.c: 82:         PORTDbits.RD2 = 1;
   612     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   613     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   614     07B8  1508               	bsf	8,2	;volatile
   615     07B9                     l856:
   616                           
   617                           ;code.c: 83:         _delay((unsigned long)((1)*(20000000/4000.0)));
   618     07B9  3007               	movlw	7
   619     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   620     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   621     07BC  00A1               	movwf	??_main+1
   622     07BD  307C               	movlw	124
   623     07BE  00A0               	movwf	??_main
   624     07BF                     u367:
   625     07BF  0BA0               	decfsz	??_main,f
   626     07C0  2FBF               	goto	u367
   627     07C1  0BA1               	decfsz	??_main+1,f
   628     07C2  2FBF               	goto	u367
   629     07C3  0000               	nop
   630     07C4                     l858:
   631                           
   632                           ;code.c: 85:         PORTB = Number[counter%10];
   633     07C4  300A               	movlw	10
   634     07C5  00F8               	movwf	___lwmod@divisor
   635     07C6  3000               	movlw	0
   636     07C7  00F9               	movwf	___lwmod@divisor+1
   637     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   638     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   639     07CA  0823               	movf	main@counter+1,w
   640     07CB  00FB               	movwf	___lwmod@dividend+1
   641     07CC  0822               	movf	main@counter,w
   642     07CD  00FA               	movwf	___lwmod@dividend
   643     07CE  120A  118A  2655  120A  118A  	fcall	___lwmod
   644     07D3  0878               	movf	?___lwmod,w
   645     07D4  3E01               	addlw	low ((_Number-__stringbase)| (0+32768))
   646     07D5  0084               	movwf	4
   647     07D6  120A  118A  2003  120A  118A  	fcall	stringdir
   648     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   649     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   650     07DD  0086               	movwf	6	;volatile
   651     07DE                     l860:
   652                           
   653                           ;code.c: 86:         PORTDbits.RD3 = 0;
   654     07DE  1188               	bcf	8,3	;volatile
   655     07DF                     l862:
   656                           
   657                           ;code.c: 87:         _delay((unsigned long)((1)*(20000000/4000.0)));
   658     07DF  3007               	movlw	7
   659     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   660     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   661     07E2  00A1               	movwf	??_main+1
   662     07E3  307C               	movlw	124
   663     07E4  00A0               	movwf	??_main
   664     07E5                     u377:
   665     07E5  0BA0               	decfsz	??_main,f
   666     07E6  2FE5               	goto	u377
   667     07E7  0BA1               	decfsz	??_main+1,f
   668     07E8  2FE5               	goto	u377
   669     07E9  0000               	nop
   670     07EA                     l864:
   671                           
   672                           ;code.c: 88:         PORTDbits.RD3 = 1;
   673     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   674     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   675     07EC  1588               	bsf	8,3	;volatile
   676     07ED                     l866:
   677                           
   678                           ;code.c: 89:         _delay((unsigned long)((1)*(20000000/4000.0)));
   679     07ED  3007               	movlw	7
   680     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   681     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   682     07F0  00A1               	movwf	??_main+1
   683     07F1  307C               	movlw	124
   684     07F2  00A0               	movwf	??_main
   685     07F3                     u387:
   686     07F3  0BA0               	decfsz	??_main,f
   687     07F4  2FF3               	goto	u387
   688     07F5  0BA1               	decfsz	??_main+1,f
   689     07F6  2FF3               	goto	u387
   690     07F7  0000               	nop
   691     07F8  2EEA               	goto	l814
   692     07F9  120A  118A  2800   	ljmp	start
   693     07FC                     __end_of_main:
   694                           
   695                           	psect	text1
   696     0655                     __ptext1:	
   697 ;; *************** function ___lwmod *****************
   698 ;; Defined at:
   699 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  divisor         2    8[COMMON] unsigned int 
   702 ;;  dividend        2   10[COMMON] unsigned int 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  counter         1   13[COMMON] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  2    8[COMMON] unsigned int 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         4       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0
   716 ;;      Temps:          1       0       0       0       0
   717 ;;      Totals:         6       0       0       0       0
   718 ;;Total ram usage:        6 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727     0655                     ___lwmod:	
   728                           ;psect for function ___lwmod
   729                           
   730     0655                     l780:	
   731                           ;incstack = 0
   732                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   733                           
   734     0655  0878               	movf	___lwmod@divisor,w
   735     0656  0479               	iorwf	___lwmod@divisor+1,w
   736     0657  1903               	btfsc	3,2
   737     0658  2E5A               	goto	u231
   738     0659  2E5B               	goto	u230
   739     065A                     u231:
   740     065A  2E8A               	goto	l798
   741     065B                     u230:
   742     065B                     l782:
   743     065B  01FD               	clrf	___lwmod@counter
   744     065C  0AFD               	incf	___lwmod@counter,f
   745     065D  2E69               	goto	l788
   746     065E                     l784:
   747     065E  3001               	movlw	1
   748     065F                     u245:
   749     065F  1003               	clrc
   750     0660  0DF8               	rlf	___lwmod@divisor,f
   751     0661  0DF9               	rlf	___lwmod@divisor+1,f
   752     0662  3EFF               	addlw	-1
   753     0663  1D03               	skipz
   754     0664  2E5F               	goto	u245
   755     0665                     l786:
   756     0665  3001               	movlw	1
   757     0666  00FC               	movwf	??___lwmod
   758     0667  087C               	movf	??___lwmod,w
   759     0668  07FD               	addwf	___lwmod@counter,f
   760     0669                     l788:
   761     0669  1FF9               	btfss	___lwmod@divisor+1,7
   762     066A  2E6C               	goto	u251
   763     066B  2E6D               	goto	u250
   764     066C                     u251:
   765     066C  2E5E               	goto	l784
   766     066D                     u250:
   767     066D                     l790:
   768     066D  0879               	movf	___lwmod@divisor+1,w
   769     066E  027B               	subwf	___lwmod@dividend+1,w
   770     066F  1D03               	skipz
   771     0670  2E73               	goto	u265
   772     0671  0878               	movf	___lwmod@divisor,w
   773     0672  027A               	subwf	___lwmod@dividend,w
   774     0673                     u265:
   775     0673  1C03               	skipc
   776     0674  2E76               	goto	u261
   777     0675  2E77               	goto	u260
   778     0676                     u261:
   779     0676  2E7D               	goto	l794
   780     0677                     u260:
   781     0677                     l792:
   782     0677  0878               	movf	___lwmod@divisor,w
   783     0678  02FA               	subwf	___lwmod@dividend,f
   784     0679  0879               	movf	___lwmod@divisor+1,w
   785     067A  1C03               	skipc
   786     067B  03FB               	decf	___lwmod@dividend+1,f
   787     067C  02FB               	subwf	___lwmod@dividend+1,f
   788     067D                     l794:
   789     067D  3001               	movlw	1
   790     067E                     u275:
   791     067E  1003               	clrc
   792     067F  0CF9               	rrf	___lwmod@divisor+1,f
   793     0680  0CF8               	rrf	___lwmod@divisor,f
   794     0681  3EFF               	addlw	-1
   795     0682  1D03               	skipz
   796     0683  2E7E               	goto	u275
   797     0684                     l796:
   798     0684  3001               	movlw	1
   799     0685  02FD               	subwf	___lwmod@counter,f
   800     0686  1D03               	btfss	3,2
   801     0687  2E89               	goto	u281
   802     0688  2E8A               	goto	u280
   803     0689                     u281:
   804     0689  2E6D               	goto	l790
   805     068A                     u280:
   806     068A                     l798:
   807     068A  087B               	movf	___lwmod@dividend+1,w
   808     068B  00F9               	movwf	?___lwmod+1
   809     068C  087A               	movf	___lwmod@dividend,w
   810     068D  00F8               	movwf	?___lwmod
   811     068E                     l404:
   812     068E  0008               	return
   813     068F                     __end_of___lwmod:
   814                           
   815                           	psect	text2
   816     068F                     __ptext2:	
   817 ;; *************** function ___lwdiv *****************
   818 ;; Defined at:
   819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  divisor         2    0[COMMON] unsigned int 
   822 ;;  dividend        2    2[COMMON] unsigned int 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  quotient        2    5[COMMON] unsigned int 
   825 ;;  counter         1    7[COMMON] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2    0[COMMON] unsigned int 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         4       0       0       0       0
   836 ;;      Locals:         3       0       0       0       0
   837 ;;      Temps:          1       0       0       0       0
   838 ;;      Totals:         8       0       0       0       0
   839 ;;Total ram usage:        8 bytes
   840 ;; Hardware stack levels used: 1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848     068F                     ___lwdiv:	
   849                           ;psect for function ___lwdiv
   850                           
   851     068F                     l754:	
   852                           ;incstack = 0
   853                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   854                           
   855     068F  01F5               	clrf	___lwdiv@quotient
   856     0690  01F6               	clrf	___lwdiv@quotient+1
   857     0691                     l756:
   858     0691  0870               	movf	___lwdiv@divisor,w
   859     0692  0471               	iorwf	___lwdiv@divisor+1,w
   860     0693  1903               	btfsc	3,2
   861     0694  2E96               	goto	u161
   862     0695  2E97               	goto	u160
   863     0696                     u161:
   864     0696  2ECE               	goto	l776
   865     0697                     u160:
   866     0697                     l758:
   867     0697  01F7               	clrf	___lwdiv@counter
   868     0698  0AF7               	incf	___lwdiv@counter,f
   869     0699  2EA5               	goto	l764
   870     069A                     l760:
   871     069A  3001               	movlw	1
   872     069B                     u175:
   873     069B  1003               	clrc
   874     069C  0DF0               	rlf	___lwdiv@divisor,f
   875     069D  0DF1               	rlf	___lwdiv@divisor+1,f
   876     069E  3EFF               	addlw	-1
   877     069F  1D03               	skipz
   878     06A0  2E9B               	goto	u175
   879     06A1                     l762:
   880     06A1  3001               	movlw	1
   881     06A2  00F4               	movwf	??___lwdiv
   882     06A3  0874               	movf	??___lwdiv,w
   883     06A4  07F7               	addwf	___lwdiv@counter,f
   884     06A5                     l764:
   885     06A5  1FF1               	btfss	___lwdiv@divisor+1,7
   886     06A6  2EA8               	goto	u181
   887     06A7  2EA9               	goto	u180
   888     06A8                     u181:
   889     06A8  2E9A               	goto	l760
   890     06A9                     u180:
   891     06A9                     l766:
   892     06A9  3001               	movlw	1
   893     06AA                     u195:
   894     06AA  1003               	clrc
   895     06AB  0DF5               	rlf	___lwdiv@quotient,f
   896     06AC  0DF6               	rlf	___lwdiv@quotient+1,f
   897     06AD  3EFF               	addlw	-1
   898     06AE  1D03               	skipz
   899     06AF  2EAA               	goto	u195
   900     06B0  0871               	movf	___lwdiv@divisor+1,w
   901     06B1  0273               	subwf	___lwdiv@dividend+1,w
   902     06B2  1D03               	skipz
   903     06B3  2EB6               	goto	u205
   904     06B4  0870               	movf	___lwdiv@divisor,w
   905     06B5  0272               	subwf	___lwdiv@dividend,w
   906     06B6                     u205:
   907     06B6  1C03               	skipc
   908     06B7  2EB9               	goto	u201
   909     06B8  2EBA               	goto	u200
   910     06B9                     u201:
   911     06B9  2EC1               	goto	l772
   912     06BA                     u200:
   913     06BA                     l768:
   914     06BA  0870               	movf	___lwdiv@divisor,w
   915     06BB  02F2               	subwf	___lwdiv@dividend,f
   916     06BC  0871               	movf	___lwdiv@divisor+1,w
   917     06BD  1C03               	skipc
   918     06BE  03F3               	decf	___lwdiv@dividend+1,f
   919     06BF  02F3               	subwf	___lwdiv@dividend+1,f
   920     06C0                     l770:
   921     06C0  1475               	bsf	___lwdiv@quotient,0
   922     06C1                     l772:
   923     06C1  3001               	movlw	1
   924     06C2                     u215:
   925     06C2  1003               	clrc
   926     06C3  0CF1               	rrf	___lwdiv@divisor+1,f
   927     06C4  0CF0               	rrf	___lwdiv@divisor,f
   928     06C5  3EFF               	addlw	-1
   929     06C6  1D03               	skipz
   930     06C7  2EC2               	goto	u215
   931     06C8                     l774:
   932     06C8  3001               	movlw	1
   933     06C9  02F7               	subwf	___lwdiv@counter,f
   934     06CA  1D03               	btfss	3,2
   935     06CB  2ECD               	goto	u221
   936     06CC  2ECE               	goto	u220
   937     06CD                     u221:
   938     06CD  2EA9               	goto	l766
   939     06CE                     u220:
   940     06CE                     l776:
   941     06CE  0876               	movf	___lwdiv@quotient+1,w
   942     06CF  00F1               	movwf	?___lwdiv+1
   943     06D0  0875               	movf	___lwdiv@quotient,w
   944     06D1  00F0               	movwf	?___lwdiv
   945     06D2                     l394:
   946     06D2  0008               	return
   947     06D3                     __end_of___lwdiv:
   948                           
   949                           	psect	text3
   950     0649                     __ptext3:	
   951 ;; *************** function _Timer1_Configuration *****************
   952 ;; Defined at:
   953 ;;		line 21 in file "code.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		status,2
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980     0649                     _Timer1_Configuration:	
   981                           ;psect for function _Timer1_Configuration
   982                           
   983     0649                     l748:	
   984                           ;incstack = 0
   985                           ; Regs used in _Timer1_Configuration: [status,2]
   986                           
   987                           
   988                           ;code.c: 23:     PIE1bits.TMR1IE = 0;
   989     0649  1683               	bsf	3,5	;RP0=1, select bank1
   990     064A  1303               	bcf	3,6	;RP1=0, select bank1
   991     064B  100C               	bcf	12,0	;volatile
   992                           
   993                           ;code.c: 25:     T1CONbits.T1CKPS1 = 0;
   994     064C  1283               	bcf	3,5	;RP0=0, select bank0
   995     064D  1303               	bcf	3,6	;RP1=0, select bank0
   996     064E  1290               	bcf	16,5	;volatile
   997                           
   998                           ;code.c: 26:     T1CONbits.T1CKPS0 = 0;
   999     064F  1210               	bcf	16,4	;volatile
  1000                           
  1001                           ;code.c: 28:     T1CONbits.TMR1CS = 1;
  1002     0650  1490               	bsf	16,1	;volatile
  1003     0651                     l750:
  1004                           
  1005                           ;code.c: 31:     TMR1H = 0;
  1006     0651  018F               	clrf	15	;volatile
  1007                           
  1008                           ;code.c: 32:     TMR1L = 0;
  1009     0652  018E               	clrf	14	;volatile
  1010     0653                     l752:
  1011                           
  1012                           ;code.c: 34:     T1CONbits.TMR1ON = 1;
  1013     0653  1410               	bsf	16,0	;volatile
  1014     0654                     l27:
  1015     0654  0008               	return
  1016     0655                     __end_of_Timer1_Configuration:
  1017     007E                     btemp	set	126	;btemp
  1018     007E                     wtemp0	set	126
  1019                           
  1020                           	psect	idloc
  1021                           
  1022                           ;Config register IDLOC0 @ 0x2000
  1023                           ;	unspecified, using default values
  1024     2000                     	org	8192
  1025     2000  3FFF               	dw	16383
  1026                           
  1027                           ;Config register IDLOC1 @ 0x2001
  1028                           ;	unspecified, using default values
  1029     2001                     	org	8193
  1030     2001  3FFF               	dw	16383
  1031                           
  1032                           ;Config register IDLOC2 @ 0x2002
  1033                           ;	unspecified, using default values
  1034     2002                     	org	8194
  1035     2002  3FFF               	dw	16383
  1036                           
  1037                           ;Config register IDLOC3 @ 0x2003
  1038                           ;	unspecified, using default values
  1039     2003                     	org	8195
  1040     2003  3FFF               	dw	16383
  1041                           
  1042                           	psect	config
  1043                           
  1044                           ;Config register CONFIG @ 0x2007
  1045                           ;	Oscillator Selection bits
  1046                           ;	FOSC = HS, HS oscillator
  1047                           ;	Watchdog Timer Enable bit
  1048                           ;	WDTE = OFF, WDT disabled
  1049                           ;	Power-up Timer Enable bit
  1050                           ;	PWRTE = OFF, PWRT disabled
  1051                           ;	Brown-out Reset Enable bit
  1052                           ;	BOREN = OFF, BOR disabled
  1053                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1054                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1055                           ;	Data EEPROM Memory Code Protection bit
  1056                           ;	CPD = OFF, Data EEPROM code protection off
  1057                           ;	Flash Program Memory Write Enable bits
  1058                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1059                           ;	In-Circuit Debugger Mode bit
  1060                           ;	DEBUG = 0x1, unprogrammed default
  1061                           ;	Flash Program Memory Code Protection bit
  1062                           ;	CP = OFF, Code protection off
  1063     2007                     	org	8199
  1064     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1347
                                              0 BANK0      4     4      0
               _Timer1_Configuration
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     615
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     618
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_Configuration                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_Configuration
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 02 13:52:39 2023

                           pc 0002                            l27 0654                            fsr 0004  
                         l404 068E                           l394 06D2                           l810 06E2  
                         l802 06D3                           l820 0701                           l812 06E5  
                         l804 06DB                           l750 0651                           l830 0728  
                         l822 070A                           l814 06EA                           l806 06DC  
                         l752 0653                           l760 069A                           l840 0769  
                         l832 0729                           l824 070C                           l816 06F3  
                         l808 06DF                           l770 06C0                           l762 06A1  
                         l754 068F                           l850 07AA                           l842 076A  
                         l834 0734                           l826 070F                           l818 06FA  
                         l748 0649                           l772 06C1                           l764 06A5  
                         l756 0691                           l780 0655                           l860 07DE  
                         l852 07AB                           l844 0775                           l836 0737  
                         l828 0710                           l774 06C8                           l766 06A9  
                         l758 0697                           l790 066D                           l782 065B  
                         l862 07DF                           l854 07B6                           l846 0778  
                         l838 0742                           l768 06BA                           l776 06CE  
                         l792 0677                           l784 065E                           l864 07EA  
                         l856 07B9                           l848 0783                           l794 067D  
                         l786 0665                           l866 07ED                           l858 07C4  
                         l796 0684                           l788 0669                           l798 068A  
                         u200 06BA                           u201 06B9                           u220 06CE  
                         u300 070A                           u221 06CD                           u205 06B6  
                         u301 0709                           u230 065B                           u215 06C2  
                         u231 065A                           u160 0697                           u161 0696  
                         u250 066D                           u251 066C                           u180 06A9  
                         u260 0677                           u181 06A8                           u261 0676  
                         u245 065F                           u317 072F                           u175 069B  
                         u327 073D                           u280 068A                           u281 0689  
                         u265 0673                           u337 0770                           u195 06AA  
                         u275 067E                           u347 077E                           u357 07B1  
                         u367 07BF                           u295 06F4                           u377 07E5  
                         u387 07F3                           fsr0 0004                   main@counter 0022  
                        _main 06D3                          btemp 007E                          start 0000  
                       ?_main 0070               __end_of___lwdiv 06D3               __end_of___lwmod 068F  
                       _TMR1H 000F                         _TMR1L 000E                         _PORTB 0006  
                       _PORTD 0008                         _TRISB 0086                         _TRISD 0088  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __initialization 07FC                  __end_of_main 07FC          _Timer1_Configuration 0649  
                      ??_main 0020                        _ADCON1 009F                        _Number 0009  
                   ??___lwdiv 0074                     ??___lwmod 007C         ?_Timer1_Configuration 0070  
     __end_of__initialization 07FC                __pcstackCOMMON 0070                    __pmaintext 06D3  
      ??_Timer1_Configuration 0070                    __stringtab 0003                       ___lwdiv 068F  
                     ___lwmod 0655                       __ptext1 0655                       __ptext2 068F  
                     __ptext3 0649                     _T1CONbits 0010          end_of_initialization 07FC  
                   _PORTDbits 0008                __end_of_Number 0013           start_initialization 07FC  
                   ___latbits 0002                 __pcstackBANK0 0020              ___lwdiv@dividend 0072  
                    ?___lwdiv 0070                      ?___lwmod 0078                     __pstrings 0003  
            ___lwdiv@quotient 0075                      _PIE1bits 008C                   __stringbase 0008  
          __end_of__stringtab 0009               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
            ___lwmod@dividend 007A                     stringcode 0003               ___lwmod@divisor 0078  
             ___lwmod@counter 007D                      stringdir 0003                      stringtab 0003  
__end_of_Timer1_Configuration 0655  
