

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri May 26 15:26:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0011                     _TMR2	set	17
   177     000B                     _INTCONbits	set	11
   178     000C                     _PIR1bits	set	12
   179     0012                     _T2CONbits	set	18
   180     0008                     _PORTDbits	set	8
   181     0006                     _PORTBbits	set	6
   182     0088                     _TRISDbits	set	136
   183     0086                     _TRISBbits	set	134
   184     0092                     _PR2	set	146
   185     008C                     _PIE1bits	set	140
   186                           
   187                           	psect	cinit
   188     000F                     start_initialization:	
   189                           ; #config settings
   190                           
   191     000F                     __initialization:
   192                           
   193                           ; Clear objects allocated to COMMON
   194     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   195     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   196                           
   197                           ; Clear objects allocated to BANK0
   198     0011  1383               	bcf	3,7	;select IRP bank0
   199     0012  3020               	movlw	low __pbssBANK0
   200     0013  0084               	movwf	4
   201     0014  3034               	movlw	low (__pbssBANK0+20)
   202     0015  120A  118A  21D2  120A  118A  	fcall	clear_ram0
   203     001A                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206     001A                     __end_of__initialization:
   207     001A  0183               	clrf	3
   208     001B  120A  118A  297E   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMMON
   211     0079                     __pbssCOMMON:
   212     0079                     _Count1_timer0:
   213     0079                     	ds	2
   214                           
   215                           	psect	bssBANK0
   216     0020                     __pbssBANK0:
   217     0020                     _Step2:
   218     0020                     	ds	4
   219     0024                     _Step1:
   220     0024                     	ds	4
   221     0028                     _Count_BOT2:
   222     0028                     	ds	2
   223     002A                     _Count_TOP2:
   224     002A                     	ds	2
   225     002C                     _Count_BOT1:
   226     002C                     	ds	2
   227     002E                     _Count_TOP1:
   228     002E                     	ds	2
   229     0030                     _Count2_timer0:
   230     0030                     	ds	2
   231     0032                     _Dir_M2:
   232     0032                     	ds	1
   233     0033                     _Dir_M1:
   234     0033                     	ds	1
   235                           
   236                           	psect	clrtext
   237     01D2                     clear_ram0:	
   238                           ;	Called with FSR containing the base address, and
   239                           ;	W with the last address+1
   240                           
   241     01D2  0064               	clrwdt	;clear the watchdog before getting into this loop
   242     01D3                     clrloop0:
   243     01D3  0180               	clrf	0	;clear RAM location pointed to by FSR
   244     01D4  0A84               	incf	4,f	;increment pointer
   245     01D5  0604               	xorwf	4,w	;XOR with final address
   246     01D6  1903               	btfsc	3,2	;have we reached the end yet?
   247     01D7  3400               	retlw	0	;all done for this memory range, return
   248     01D8  0604               	xorwf	4,w	;XOR again to restore value
   249     01D9  29D3               	goto	clrloop0	;do the next byte
   250                           
   251                           	psect	cstackCOMMON
   252     0070                     __pcstackCOMMON:
   253     0070                     ?_Step:
   254     0070                     ??_Step:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_ISR:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ??_ISR:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268     0070                     	ds	2
   269     0072                     ?___awdiv:
   270     0072                     ___awdiv@divisor:	
   271                           ; 2 bytes @ 0x2
   272                           
   273                           
   274                           ; 2 bytes @ 0x2
   275     0072                     	ds	2
   276     0074                     ___awdiv@dividend:
   277                           
   278                           ; 2 bytes @ 0x4
   279     0074                     	ds	2
   280     0076                     ??___awdiv:
   281                           
   282                           ; 1 bytes @ 0x6
   283     0076                     	ds	1
   284     0077                     ??_Speed_M1:
   285     0077                     ??_Speed_M2:	
   286                           ; 1 bytes @ 0x7
   287                           
   288                           
   289                           ; 1 bytes @ 0x7
   290     0077                     	ds	2
   291     0079                     ??_main:
   292                           
   293                           	psect	cstackBANK0
   294     0034                     __pcstackBANK0:	
   295                           ; 1 bytes @ 0x9
   296                           
   297     0034                     ___awdiv@counter:
   298                           
   299                           ; 1 bytes @ 0x0
   300     0034                     	ds	1
   301     0035                     ___awdiv@sign:
   302                           
   303                           ; 1 bytes @ 0x1
   304     0035                     	ds	1
   305     0036                     ___awdiv@quotient:
   306                           
   307                           ; 2 bytes @ 0x2
   308     0036                     	ds	2
   309     0038                     ?_Speed_M1:
   310     0038                     ?_Speed_M2:	
   311                           ; 1 bytes @ 0x4
   312                           
   313     0038                     Speed_M1@x:	
   314                           ; 1 bytes @ 0x4
   315                           
   316     0038                     Speed_M2@x:	
   317                           ; 2 bytes @ 0x4
   318                           
   319                           
   320                           ; 2 bytes @ 0x4
   321     0038                     	ds	2
   322                           
   323                           	psect	maintext
   324     017E                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 106 in file "2_step_control_code.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called: 4
   350 ;; This function calls:
   351 ;;		_Speed_M1
   352 ;;		_Speed_M2
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358     017E                     _main:	
   359                           ;psect for function _main
   360                           
   361     017E                     l1055:	
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   364                           
   365     017E  1283               	bcf	3,5	;RP0=0, select bank0
   366     017F  1303               	bcf	3,6	;RP1=0, select bank0
   367     0180  1092               	bcf	18,1	;volatile
   368     0181  1012               	bcf	18,0	;volatile
   369     0182  108C               	bcf	12,1	;volatile
   370     0183  1683               	bsf	3,5	;RP0=1, select bank1
   371     0184  1303               	bcf	3,6	;RP1=0, select bank1
   372     0185  148C               	bsf	12,1	;volatile
   373     0186  178B               	bsf	11,7	;volatile
   374     0187  170B               	bsf	11,6	;volatile
   375     0188                     l1057:
   376     0188  3009               	movlw	9
   377     0189  0092               	movwf	18	;volatile
   378     018A                     l1059:
   379     018A  1283               	bcf	3,5	;RP0=0, select bank0
   380     018B  1303               	bcf	3,6	;RP1=0, select bank0
   381     018C  0191               	clrf	17	;volatile
   382     018D                     l1061:
   383     018D  1512               	bsf	18,2	;volatile
   384     018E                     l1063:
   385     018E  1683               	bsf	3,5	;RP0=1, select bank1
   386     018F  1303               	bcf	3,6	;RP1=0, select bank1
   387     0190  1206               	bcf	6,4	;volatile
   388     0191                     l1065:
   389     0191  1186               	bcf	6,3	;volatile
   390     0192                     l1067:
   391     0192  1308               	bcf	8,6	;volatile
   392     0193                     l1069:
   393     0193  1086               	bcf	6,1	;volatile
   394     0194                     l1071:
   395     0194  1006               	bcf	6,0	;volatile
   396     0195                     l1073:
   397     0195  1388               	bcf	8,7	;volatile
   398     0196                     l1075:
   399     0196  1286               	bcf	6,5	;volatile
   400     0197                     l1077:
   401     0197  1306               	bcf	6,6	;volatile
   402     0198                     l1079:
   403     0198  1386               	bcf	6,7	;volatile
   404     0199                     l1081:
   405     0199  1283               	bcf	3,5	;RP0=0, select bank0
   406     019A  1303               	bcf	3,6	;RP1=0, select bank0
   407     019B  1686               	bsf	6,5	;volatile
   408     019C                     l1083:
   409     019C  1706               	bsf	6,6	;volatile
   410     019D                     l1085:
   411     019D  1786               	bsf	6,7	;volatile
   412     019E                     l1087:
   413     019E  1206               	bcf	6,4	;volatile
   414     019F                     l1089:
   415     019F  1086               	bcf	6,1	;volatile
   416     01A0                     l1091:
   417     01A0  3032               	movlw	50
   418     01A1  1283               	bcf	3,5	;RP0=0, select bank0
   419     01A2  1303               	bcf	3,6	;RP1=0, select bank0
   420     01A3  00B8               	movwf	Speed_M1@x
   421     01A4  3000               	movlw	0
   422     01A5  00B9               	movwf	Speed_M1@x+1
   423     01A6  120A  118A  20E1  120A  118A  	fcall	_Speed_M1
   424     01AB                     l1093:
   425     01AB  3032               	movlw	50
   426     01AC  1283               	bcf	3,5	;RP0=0, select bank0
   427     01AD  1303               	bcf	3,6	;RP1=0, select bank0
   428     01AE  00B8               	movwf	Speed_M2@x
   429     01AF  3000               	movlw	0
   430     01B0  00B9               	movwf	Speed_M2@x+1
   431     01B1  120A  118A  2087  120A  118A  	fcall	_Speed_M2
   432     01B6  29A0               	goto	l1091
   433     01B7  120A  118A  280C   	ljmp	start
   434     01BA                     __end_of_main:
   435                           
   436                           	psect	text1
   437     0087                     __ptext1:	
   438 ;; *************** function _Speed_M2 *****************
   439 ;; Defined at:
   440 ;;		line 58 in file "2_step_control_code.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;  x               2    4[BANK0 ] int 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       2       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          2       0       0       0       0
   457 ;;      Totals:         2       2       0       0       0
   458 ;;Total ram usage:        4 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 3
   461 ;; This function calls:
   462 ;;		___awdiv
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     0087                     _Speed_M2:	
   469                           ;psect for function _Speed_M2
   470                           
   471     0087                     l1037:	
   472                           ;incstack = 0
   473                           ; Regs used in _Speed_M2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   474                           
   475     0087  1283               	bcf	3,5	;RP0=0, select bank0
   476     0088  1303               	bcf	3,6	;RP1=0, select bank0
   477     0089  1FB9               	btfss	Speed_M2@x+1,7
   478     008A  288C               	goto	u551
   479     008B  288D               	goto	u550
   480     008C                     u551:
   481     008C  28AF               	goto	l1045
   482     008D                     u550:
   483     008D                     l1039:
   484     008D  01B2               	clrf	_Dir_M2
   485     008E  03B2               	decf	_Dir_M2,f
   486     008F  1006               	bcf	6,0	;volatile
   487     0090                     l1041:
   488     0090  0938               	comf	Speed_M2@x,w
   489     0091  00F7               	movwf	??_Speed_M2
   490     0092  0939               	comf	Speed_M2@x+1,w
   491     0093  00F8               	movwf	??_Speed_M2+1
   492     0094  0AF7               	incf	??_Speed_M2,f
   493     0095  1903               	skipnz
   494     0096  0AF8               	incf	??_Speed_M2+1,f
   495     0097  0877               	movf	??_Speed_M2,w
   496     0098  00A8               	movwf	_Count_BOT2
   497     0099  0878               	movf	??_Speed_M2+1,w
   498     009A  00A9               	movwf	_Count_BOT2+1
   499     009B                     l1043:
   500     009B  30FE               	movlw	254
   501     009C  00F2               	movwf	___awdiv@divisor
   502     009D  30FF               	movlw	255
   503     009E  00F3               	movwf	___awdiv@divisor+1
   504     009F  0839               	movf	Speed_M2@x+1,w
   505     00A0  00F5               	movwf	___awdiv@dividend+1
   506     00A1  0838               	movf	Speed_M2@x,w
   507     00A2  00F4               	movwf	___awdiv@dividend
   508     00A3  120A  118A  201E  120A  118A  	fcall	___awdiv
   509     00A8  0873               	movf	?___awdiv+1,w
   510     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   511     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   512     00AB  00AB               	movwf	_Count_TOP2+1
   513     00AC  0872               	movf	?___awdiv,w
   514     00AD  00AA               	movwf	_Count_TOP2
   515     00AE  28E0               	goto	l54
   516     00AF                     l1045:
   517     00AF  0839               	movf	Speed_M2@x+1,w
   518     00B0  3A80               	xorlw	128
   519     00B1  00FF               	movwf	btemp+1
   520     00B2  3080               	movlw	128
   521     00B3  027F               	subwf	btemp+1,w
   522     00B4  1D03               	skipz
   523     00B5  28B8               	goto	u565
   524     00B6  3001               	movlw	1
   525     00B7  0238               	subwf	Speed_M2@x,w
   526     00B8                     u565:
   527     00B8  1C03               	skipc
   528     00B9  28BB               	goto	u561
   529     00BA  28BC               	goto	u560
   530     00BB                     u561:
   531     00BB  28D9               	goto	l1053
   532     00BC                     u560:
   533     00BC                     l1047:
   534     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   535     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   536     00BE  01B2               	clrf	_Dir_M2
   537     00BF  0AB2               	incf	_Dir_M2,f
   538     00C0  1406               	bsf	6,0	;volatile
   539     00C1                     l1049:
   540     00C1  0839               	movf	Speed_M2@x+1,w
   541     00C2  00A9               	movwf	_Count_BOT2+1
   542     00C3  0838               	movf	Speed_M2@x,w
   543     00C4  00A8               	movwf	_Count_BOT2
   544     00C5                     l1051:
   545     00C5  3002               	movlw	2
   546     00C6  00F2               	movwf	___awdiv@divisor
   547     00C7  3000               	movlw	0
   548     00C8  00F3               	movwf	___awdiv@divisor+1
   549     00C9  0839               	movf	Speed_M2@x+1,w
   550     00CA  00F5               	movwf	___awdiv@dividend+1
   551     00CB  0838               	movf	Speed_M2@x,w
   552     00CC  00F4               	movwf	___awdiv@dividend
   553     00CD  120A  118A  201E  120A  118A  	fcall	___awdiv
   554     00D2  0873               	movf	?___awdiv+1,w
   555     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   556     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   557     00D5  00AB               	movwf	_Count_TOP2+1
   558     00D6  0872               	movf	?___awdiv,w
   559     00D7  00AA               	movwf	_Count_TOP2
   560     00D8  28E0               	goto	l54
   561     00D9                     l1053:
   562     00D9  1283               	bcf	3,5	;RP0=0, select bank0
   563     00DA  1303               	bcf	3,6	;RP1=0, select bank0
   564     00DB  01B2               	clrf	_Dir_M2
   565     00DC  01A8               	clrf	_Count_BOT2
   566     00DD  01A9               	clrf	_Count_BOT2+1
   567     00DE  01AA               	clrf	_Count_TOP2
   568     00DF  01AB               	clrf	_Count_TOP2+1
   569     00E0                     l54:
   570     00E0  0008               	return
   571     00E1                     __end_of_Speed_M2:
   572                           
   573                           	psect	text2
   574     00E1                     __ptext2:	
   575 ;; *************** function _Speed_M1 *****************
   576 ;; Defined at:
   577 ;;		line 34 in file "2_step_control_code.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  x               2    4[BANK0 ] int 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       2       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         2       2       0       0       0
   595 ;;Total ram usage:        4 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 3
   598 ;; This function calls:
   599 ;;		___awdiv
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     00E1                     _Speed_M1:	
   606                           ;psect for function _Speed_M1
   607                           
   608     00E1                     l1019:	
   609                           ;incstack = 0
   610                           ; Regs used in _Speed_M1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   611                           
   612     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   613     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   614     00E3  1FB9               	btfss	Speed_M1@x+1,7
   615     00E4  28E6               	goto	u531
   616     00E5  28E7               	goto	u530
   617     00E6                     u531:
   618     00E6  2909               	goto	l1027
   619     00E7                     u530:
   620     00E7                     l1021:
   621     00E7  01B3               	clrf	_Dir_M1
   622     00E8  03B3               	decf	_Dir_M1,f
   623     00E9  1186               	bcf	6,3	;volatile
   624     00EA                     l1023:
   625     00EA  0938               	comf	Speed_M1@x,w
   626     00EB  00F7               	movwf	??_Speed_M1
   627     00EC  0939               	comf	Speed_M1@x+1,w
   628     00ED  00F8               	movwf	??_Speed_M1+1
   629     00EE  0AF7               	incf	??_Speed_M1,f
   630     00EF  1903               	skipnz
   631     00F0  0AF8               	incf	??_Speed_M1+1,f
   632     00F1  0877               	movf	??_Speed_M1,w
   633     00F2  00AC               	movwf	_Count_BOT1
   634     00F3  0878               	movf	??_Speed_M1+1,w
   635     00F4  00AD               	movwf	_Count_BOT1+1
   636     00F5                     l1025:
   637     00F5  30FE               	movlw	254
   638     00F6  00F2               	movwf	___awdiv@divisor
   639     00F7  30FF               	movlw	255
   640     00F8  00F3               	movwf	___awdiv@divisor+1
   641     00F9  0839               	movf	Speed_M1@x+1,w
   642     00FA  00F5               	movwf	___awdiv@dividend+1
   643     00FB  0838               	movf	Speed_M1@x,w
   644     00FC  00F4               	movwf	___awdiv@dividend
   645     00FD  120A  118A  201E  120A  118A  	fcall	___awdiv
   646     0102  0873               	movf	?___awdiv+1,w
   647     0103  1283               	bcf	3,5	;RP0=0, select bank0
   648     0104  1303               	bcf	3,6	;RP1=0, select bank0
   649     0105  00AF               	movwf	_Count_TOP1+1
   650     0106  0872               	movf	?___awdiv,w
   651     0107  00AE               	movwf	_Count_TOP1
   652     0108  2932               	goto	l47
   653     0109                     l1027:
   654     0109  0839               	movf	Speed_M1@x+1,w
   655     010A  3A80               	xorlw	128
   656     010B  00FF               	movwf	btemp+1
   657     010C  3080               	movlw	128
   658     010D  027F               	subwf	btemp+1,w
   659     010E  1D03               	skipz
   660     010F  2912               	goto	u545
   661     0110  3001               	movlw	1
   662     0111  0238               	subwf	Speed_M1@x,w
   663     0112                     u545:
   664     0112  1C03               	skipc
   665     0113  2915               	goto	u541
   666     0114  2916               	goto	u540
   667     0115                     u541:
   668     0115  292B               	goto	l1035
   669     0116                     u540:
   670     0116                     l1029:
   671     0116  1283               	bcf	3,5	;RP0=0, select bank0
   672     0117  1303               	bcf	3,6	;RP1=0, select bank0
   673     0118  01B3               	clrf	_Dir_M1
   674     0119  0AB3               	incf	_Dir_M1,f
   675     011A  1586               	bsf	6,3	;volatile
   676     011B                     l1031:
   677     011B  0839               	movf	Speed_M1@x+1,w
   678     011C  00AD               	movwf	_Count_BOT1+1
   679     011D  0838               	movf	Speed_M1@x,w
   680     011E  00AC               	movwf	_Count_BOT1
   681     011F                     l1033:
   682     011F  0839               	movf	Speed_M1@x+1,w
   683     0120  00F8               	movwf	??_Speed_M1+1
   684     0121  0838               	movf	Speed_M1@x,w
   685     0122  00F7               	movwf	??_Speed_M1
   686     0123  1003               	clrc
   687     0124  0CF8               	rrf	??_Speed_M1+1,f
   688     0125  0CF7               	rrf	??_Speed_M1,f
   689     0126  0877               	movf	??_Speed_M1,w
   690     0127  00AE               	movwf	_Count_TOP1
   691     0128  0878               	movf	??_Speed_M1+1,w
   692     0129  00AF               	movwf	_Count_TOP1+1
   693     012A  2932               	goto	l47
   694     012B                     l1035:
   695     012B  1283               	bcf	3,5	;RP0=0, select bank0
   696     012C  1303               	bcf	3,6	;RP1=0, select bank0
   697     012D  01B3               	clrf	_Dir_M1
   698     012E  01AC               	clrf	_Count_BOT1
   699     012F  01AD               	clrf	_Count_BOT1+1
   700     0130  01AE               	clrf	_Count_TOP1
   701     0131  01AF               	clrf	_Count_TOP1+1
   702     0132                     l47:
   703     0132  0008               	return
   704     0133                     __end_of_Speed_M1:
   705                           
   706                           	psect	text3
   707     001E                     __ptext3:	
   708 ;; *************** function ___awdiv *****************
   709 ;; Defined at:
   710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  divisor         2    2[COMMON] int 
   713 ;;  dividend        2    4[COMMON] int 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  quotient        2    2[BANK0 ] int 
   716 ;;  sign            1    1[BANK0 ] unsigned char 
   717 ;;  counter         1    0[BANK0 ] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  2    2[COMMON] int 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         4       0       0       0       0
   728 ;;      Locals:         0       4       0       0       0
   729 ;;      Temps:          1       0       0       0       0
   730 ;;      Totals:         5       4       0       0       0
   731 ;;Total ram usage:        9 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 2
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_Speed_M1
   738 ;;		_Speed_M2
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     001E                     ___awdiv:	
   743                           ;psect for function ___awdiv
   744                           
   745     001E                     l975:	
   746                           ;incstack = 0
   747                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   748                           
   749     001E  1283               	bcf	3,5	;RP0=0, select bank0
   750     001F  1303               	bcf	3,6	;RP1=0, select bank0
   751     0020  01B5               	clrf	___awdiv@sign
   752     0021                     l977:
   753     0021  1FF3               	btfss	___awdiv@divisor+1,7
   754     0022  2824               	goto	u431
   755     0023  2825               	goto	u430
   756     0024                     u431:
   757     0024  282C               	goto	l983
   758     0025                     u430:
   759     0025                     l979:
   760     0025  09F2               	comf	___awdiv@divisor,f
   761     0026  09F3               	comf	___awdiv@divisor+1,f
   762     0027  0AF2               	incf	___awdiv@divisor,f
   763     0028  1903               	skipnz
   764     0029  0AF3               	incf	___awdiv@divisor+1,f
   765     002A                     l981:
   766     002A  01B5               	clrf	___awdiv@sign
   767     002B  0AB5               	incf	___awdiv@sign,f
   768     002C                     l983:
   769     002C  1FF5               	btfss	___awdiv@dividend+1,7
   770     002D  282F               	goto	u441
   771     002E  2830               	goto	u440
   772     002F                     u441:
   773     002F  2839               	goto	l989
   774     0030                     u440:
   775     0030                     l985:
   776     0030  09F4               	comf	___awdiv@dividend,f
   777     0031  09F5               	comf	___awdiv@dividend+1,f
   778     0032  0AF4               	incf	___awdiv@dividend,f
   779     0033  1903               	skipnz
   780     0034  0AF5               	incf	___awdiv@dividend+1,f
   781     0035                     l987:
   782     0035  3001               	movlw	1
   783     0036  00F6               	movwf	??___awdiv
   784     0037  0876               	movf	??___awdiv,w
   785     0038  06B5               	xorwf	___awdiv@sign,f
   786     0039                     l989:
   787     0039  01B6               	clrf	___awdiv@quotient
   788     003A  01B7               	clrf	___awdiv@quotient+1
   789     003B                     l991:
   790     003B  0872               	movf	___awdiv@divisor,w
   791     003C  0473               	iorwf	___awdiv@divisor+1,w
   792     003D  1903               	btfsc	3,2
   793     003E  2840               	goto	u451
   794     003F  2841               	goto	u450
   795     0040                     u451:
   796     0040  2878               	goto	l1011
   797     0041                     u450:
   798     0041                     l993:
   799     0041  01B4               	clrf	___awdiv@counter
   800     0042  0AB4               	incf	___awdiv@counter,f
   801     0043  284F               	goto	l999
   802     0044                     l995:
   803     0044  3001               	movlw	1
   804     0045                     u465:
   805     0045  1003               	clrc
   806     0046  0DF2               	rlf	___awdiv@divisor,f
   807     0047  0DF3               	rlf	___awdiv@divisor+1,f
   808     0048  3EFF               	addlw	-1
   809     0049  1D03               	skipz
   810     004A  2845               	goto	u465
   811     004B                     l997:
   812     004B  3001               	movlw	1
   813     004C  00F6               	movwf	??___awdiv
   814     004D  0876               	movf	??___awdiv,w
   815     004E  07B4               	addwf	___awdiv@counter,f
   816     004F                     l999:
   817     004F  1FF3               	btfss	___awdiv@divisor+1,7
   818     0050  2852               	goto	u471
   819     0051  2853               	goto	u470
   820     0052                     u471:
   821     0052  2844               	goto	l995
   822     0053                     u470:
   823     0053                     l1001:
   824     0053  3001               	movlw	1
   825     0054                     u485:
   826     0054  1003               	clrc
   827     0055  0DB6               	rlf	___awdiv@quotient,f
   828     0056  0DB7               	rlf	___awdiv@quotient+1,f
   829     0057  3EFF               	addlw	-1
   830     0058  1D03               	skipz
   831     0059  2854               	goto	u485
   832     005A  0873               	movf	___awdiv@divisor+1,w
   833     005B  0275               	subwf	___awdiv@dividend+1,w
   834     005C  1D03               	skipz
   835     005D  2860               	goto	u495
   836     005E  0872               	movf	___awdiv@divisor,w
   837     005F  0274               	subwf	___awdiv@dividend,w
   838     0060                     u495:
   839     0060  1C03               	skipc
   840     0061  2863               	goto	u491
   841     0062  2864               	goto	u490
   842     0063                     u491:
   843     0063  286B               	goto	l1007
   844     0064                     u490:
   845     0064                     l1003:
   846     0064  0872               	movf	___awdiv@divisor,w
   847     0065  02F4               	subwf	___awdiv@dividend,f
   848     0066  0873               	movf	___awdiv@divisor+1,w
   849     0067  1C03               	skipc
   850     0068  03F5               	decf	___awdiv@dividend+1,f
   851     0069  02F5               	subwf	___awdiv@dividend+1,f
   852     006A                     l1005:
   853     006A  1436               	bsf	___awdiv@quotient,0
   854     006B                     l1007:
   855     006B  3001               	movlw	1
   856     006C                     u505:
   857     006C  1003               	clrc
   858     006D  0CF3               	rrf	___awdiv@divisor+1,f
   859     006E  0CF2               	rrf	___awdiv@divisor,f
   860     006F  3EFF               	addlw	-1
   861     0070  1D03               	skipz
   862     0071  286C               	goto	u505
   863     0072                     l1009:
   864     0072  3001               	movlw	1
   865     0073  02B4               	subwf	___awdiv@counter,f
   866     0074  1D03               	btfss	3,2
   867     0075  2877               	goto	u511
   868     0076  2878               	goto	u510
   869     0077                     u511:
   870     0077  2853               	goto	l1001
   871     0078                     u510:
   872     0078                     l1011:
   873     0078  0835               	movf	___awdiv@sign,w
   874     0079  1903               	btfsc	3,2
   875     007A  287C               	goto	u521
   876     007B  287D               	goto	u520
   877     007C                     u521:
   878     007C  2882               	goto	l1015
   879     007D                     u520:
   880     007D                     l1013:
   881     007D  09B6               	comf	___awdiv@quotient,f
   882     007E  09B7               	comf	___awdiv@quotient+1,f
   883     007F  0AB6               	incf	___awdiv@quotient,f
   884     0080  1903               	skipnz
   885     0081  0AB7               	incf	___awdiv@quotient+1,f
   886     0082                     l1015:
   887     0082  0837               	movf	___awdiv@quotient+1,w
   888     0083  00F3               	movwf	?___awdiv+1
   889     0084  0836               	movf	___awdiv@quotient,w
   890     0085  00F2               	movwf	?___awdiv
   891     0086                     l318:
   892     0086  0008               	return
   893     0087                     __end_of___awdiv:
   894                           
   895                           	psect	text4
   896     01BA                     __ptext4:	
   897 ;; *************** function _ISR *****************
   898 ;; Defined at:
   899 ;;		line 159 in file "2_step_control_code.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          2       0       0       0       0
   916 ;;      Totals:         2       0       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 1
   920 ;; This function calls:
   921 ;;		_Step
   922 ;; This function is called by:
   923 ;;		Interrupt level 1
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     01BA                     _ISR:	
   928                           ;psect for function _ISR
   929                           
   930     01BA                     i1l963:
   931     01BA  1283               	bcf	3,5	;RP0=0, select bank0
   932     01BB  1303               	bcf	3,6	;RP1=0, select bank0
   933     01BC  1C8C               	btfss	12,1	;volatile
   934     01BD  29BF               	goto	u42_21
   935     01BE  29C0               	goto	u42_20
   936     01BF                     u42_21:
   937     01BF  29CB               	goto	i1l79
   938     01C0                     u42_20:
   939     01C0                     i1l965:
   940     01C0  1112               	bcf	18,2	;volatile
   941     01C1                     i1l967:
   942     01C1  120A  118A  2133  120A  118A  	fcall	_Step
   943     01C6                     i1l969:
   944     01C6  1283               	bcf	3,5	;RP0=0, select bank0
   945     01C7  1303               	bcf	3,6	;RP1=0, select bank0
   946     01C8  0191               	clrf	17	;volatile
   947     01C9                     i1l971:
   948     01C9  1512               	bsf	18,2	;volatile
   949     01CA                     i1l973:
   950     01CA  108C               	bcf	12,1	;volatile
   951     01CB                     i1l79:
   952     01CB  0871               	movf	??_ISR+1,w
   953     01CC  008A               	movwf	10
   954     01CD  0E70               	swapf	??_ISR,w
   955     01CE  0083               	movwf	3
   956     01CF  0EFE               	swapf	btemp,f
   957     01D0  0E7E               	swapf	btemp,w
   958     01D1  0009               	retfie
   959     01D2                     __end_of_ISR:
   960                           
   961                           	psect	intentry
   962     0004                     __pintentry:	
   963                           ;incstack = 0
   964                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   965                           
   966     0004                     interrupt_function:
   967     007E                     saved_w	set	btemp
   968     0004  00FE               	movwf	btemp
   969     0005  0E03               	swapf	3,w
   970     0006  00F0               	movwf	??_ISR
   971     0007  080A               	movf	10,w
   972     0008  00F1               	movwf	??_ISR+1
   973     0009  120A  118A  29BA   	ljmp	_ISR
   974                           
   975                           	psect	text5
   976     0133                     __ptext5:	
   977 ;; *************** function _Step *****************
   978 ;; Defined at:
   979 ;;		line 82 in file "2_step_control_code.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_ISR
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006     0133                     _Step:	
  1007                           ;psect for function _Step
  1008                           
  1009     0133                     i1l903:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _Step: [wreg+status,2+status,0]
  1012                           
  1013     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0135  0833               	movf	_Dir_M1,w
  1016     0136  1903               	btfsc	3,2
  1017     0137  2939               	goto	u36_21
  1018     0138  293A               	goto	u36_20
  1019     0139                     u36_21:
  1020     0139  2959               	goto	i1l913
  1021     013A                     u36_20:
  1022     013A                     i1l905:
  1023     013A  3001               	movlw	1
  1024     013B  07F9               	addwf	_Count1_timer0,f	;volatile
  1025     013C  1803               	skipnc
  1026     013D  0AFA               	incf	_Count1_timer0+1,f	;volatile
  1027     013E  3000               	movlw	0
  1028     013F  07FA               	addwf	_Count1_timer0+1,f	;volatile
  1029     0140  087A               	movf	_Count1_timer0+1,w	;volatile
  1030     0141  022F               	subwf	_Count_TOP1+1,w
  1031     0142  1D03               	skipz
  1032     0143  2946               	goto	u37_25
  1033     0144  0879               	movf	_Count1_timer0,w	;volatile
  1034     0145  022E               	subwf	_Count_TOP1,w
  1035     0146                     u37_25:
  1036     0146  1C03               	skipc
  1037     0147  2949               	goto	u37_21
  1038     0148  294A               	goto	u37_20
  1039     0149                     u37_21:
  1040     0149  294C               	goto	i1l58
  1041     014A                     u37_20:
  1042     014A                     i1l907:
  1043     014A  1708               	bsf	8,6	;volatile
  1044     014B  294D               	goto	i1l909
  1045     014C                     i1l58:
  1046     014C  1308               	bcf	8,6	;volatile
  1047     014D                     i1l909:
  1048     014D  082D               	movf	_Count_BOT1+1,w
  1049     014E  027A               	subwf	_Count1_timer0+1,w	;volatile
  1050     014F  1D03               	skipz
  1051     0150  2953               	goto	u38_25
  1052     0151  082C               	movf	_Count_BOT1,w
  1053     0152  0279               	subwf	_Count1_timer0,w	;volatile
  1054     0153                     u38_25:
  1055     0153  1C03               	skipc
  1056     0154  2956               	goto	u38_21
  1057     0155  2957               	goto	u38_20
  1058     0156                     u38_21:
  1059     0156  2959               	goto	i1l913
  1060     0157                     u38_20:
  1061     0157                     i1l911:
  1062     0157  01F9               	clrf	_Count1_timer0	;volatile
  1063     0158  01FA               	clrf	_Count1_timer0+1	;volatile
  1064     0159                     i1l913:
  1065     0159  0832               	movf	_Dir_M2,w
  1066     015A  1903               	btfsc	3,2
  1067     015B  295D               	goto	u39_21
  1068     015C  295E               	goto	u39_20
  1069     015D                     u39_21:
  1070     015D  297D               	goto	i1l65
  1071     015E                     u39_20:
  1072     015E                     i1l915:
  1073     015E  3001               	movlw	1
  1074     015F  07B0               	addwf	_Count2_timer0,f	;volatile
  1075     0160  1803               	skipnc
  1076     0161  0AB1               	incf	_Count2_timer0+1,f	;volatile
  1077     0162  3000               	movlw	0
  1078     0163  07B1               	addwf	_Count2_timer0+1,f	;volatile
  1079     0164  0831               	movf	_Count2_timer0+1,w	;volatile
  1080     0165  022B               	subwf	_Count_TOP2+1,w
  1081     0166  1D03               	skipz
  1082     0167  296A               	goto	u40_25
  1083     0168  0830               	movf	_Count2_timer0,w	;volatile
  1084     0169  022A               	subwf	_Count_TOP2,w
  1085     016A                     u40_25:
  1086     016A  1C03               	skipc
  1087     016B  296D               	goto	u40_21
  1088     016C  296E               	goto	u40_20
  1089     016D                     u40_21:
  1090     016D  2970               	goto	i1l62
  1091     016E                     u40_20:
  1092     016E                     i1l917:
  1093     016E  1788               	bsf	8,7	;volatile
  1094     016F  2971               	goto	i1l919
  1095     0170                     i1l62:
  1096     0170  1388               	bcf	8,7	;volatile
  1097     0171                     i1l919:
  1098     0171  0829               	movf	_Count_BOT2+1,w
  1099     0172  0231               	subwf	_Count2_timer0+1,w	;volatile
  1100     0173  1D03               	skipz
  1101     0174  2977               	goto	u41_25
  1102     0175  0828               	movf	_Count_BOT2,w
  1103     0176  0230               	subwf	_Count2_timer0,w	;volatile
  1104     0177                     u41_25:
  1105     0177  1C03               	skipc
  1106     0178  297A               	goto	u41_21
  1107     0179  297B               	goto	u41_20
  1108     017A                     u41_21:
  1109     017A  297D               	goto	i1l65
  1110     017B                     u41_20:
  1111     017B                     i1l921:
  1112     017B  01B0               	clrf	_Count2_timer0	;volatile
  1113     017C  01B1               	clrf	_Count2_timer0+1	;volatile
  1114     017D                     i1l65:
  1115     017D  0008               	return
  1116     017E                     __end_of_Step:
  1117     007E                     btemp	set	126	;btemp
  1118     007E                     wtemp0	set	126
  1119                           
  1120                           	psect	idloc
  1121                           
  1122                           ;Config register IDLOC0 @ 0x2000
  1123                           ;	unspecified, using default values
  1124     2000                     	org	8192
  1125     2000  3FFF               	dw	16383
  1126                           
  1127                           ;Config register IDLOC1 @ 0x2001
  1128                           ;	unspecified, using default values
  1129     2001                     	org	8193
  1130     2001  3FFF               	dw	16383
  1131                           
  1132                           ;Config register IDLOC2 @ 0x2002
  1133                           ;	unspecified, using default values
  1134     2002                     	org	8194
  1135     2002  3FFF               	dw	16383
  1136                           
  1137                           ;Config register IDLOC3 @ 0x2003
  1138                           ;	unspecified, using default values
  1139     2003                     	org	8195
  1140     2003  3FFF               	dw	16383
  1141                           
  1142                           	psect	config
  1143                           
  1144                           ;Config register CONFIG @ 0x2007
  1145                           ;	unspecified, using default values
  1146                           ;	Oscillator Selection bits
  1147                           ;	FOSC = 0x3, unprogrammed default
  1148                           ;	Watchdog Timer Enable bit
  1149                           ;	WDTE = 0x1, unprogrammed default
  1150                           ;	Power-up Timer Enable bit
  1151                           ;	PWRTE = 0x1, unprogrammed default
  1152                           ;	Brown-out Reset Enable bit
  1153                           ;	BOREN = 0x1, unprogrammed default
  1154                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1155                           ;	LVP = 0x1, unprogrammed default
  1156                           ;	Data EEPROM Memory Code Protection bit
  1157                           ;	CPD = 0x1, unprogrammed default
  1158                           ;	Flash Program Memory Write Enable bits
  1159                           ;	WRT = 0x3, unprogrammed default
  1160                           ;	In-Circuit Debugger Mode bit
  1161                           ;	DEBUG = 0x1, unprogrammed default
  1162                           ;	Flash Program Memory Code Protection bit
  1163                           ;	CP = 0x1, unprogrammed default
  1164     2007                     	org	8199
  1165     2007  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      6      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Speed_M1
    _main->_Speed_M2
    _Speed_M2->___awdiv
    _Speed_M1->___awdiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Speed_M1
    _main->_Speed_M2
    _Speed_M2->___awdiv
    _Speed_M1->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2522
                           _Speed_M1
                           _Speed_M2
 ---------------------------------------------------------------------------------
 (1) _Speed_M2                                             4     2      2    1261
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _Speed_M1                                             4     2      2    1261
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                               _Step
 ---------------------------------------------------------------------------------
 (4) _Step                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Speed_M1
     ___awdiv
   _Speed_M2
     ___awdiv

 _ISR (ROOT)
   _Step

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri May 26 15:26:16 2023

                     l54 00E0                       l47 0132             ___awdiv@sign 0035  
                     fsr 0004                      l318 0086                      l981 002A  
                    l991 003B                      l983 002C                      l975 001E  
                    l993 0041                      l985 0030                      l977 0021  
                    l995 0044                      l987 0035                      l979 0025  
                    l997 004B                      l989 0039                      l999 004F  
                    u510 0078                      u430 0025                      _PR2 0092  
                    u511 0077                      u431 0024                      u520 007D  
                    u440 0030                      u521 007C                      u505 006C  
                    u441 002F                      u450 0041                      u530 00E7  
                    u451 0040                      u531 00E6                      u540 0116  
                    _ISR 01BA                      u541 0115                      u470 0053  
                    u550 008D                      u471 0052                      u551 008C  
                    u560 00BC                      u465 0045                      u545 0112  
                    u561 00BB                      u490 0064                      u491 0063  
                    u485 0054                      u565 00B8                      u495 0060  
                    indf 0000                     ?_ISR 0070                     l1001 0053  
                   l1003 0064                     l1011 0078                     l1013 007D  
                   l1005 006A                     l1021 00E7                     l1015 0082  
                   l1007 006B                     l1031 011B                     l1023 00EA  
                   l1009 0072                     l1033 011F                     l1025 00F5  
                   l1041 0090                     l1035 012B                     l1027 0109  
                   l1019 00E1                     l1051 00C5                     l1043 009B  
                   l1029 0116                     l1053 00D9                     l1045 00AF  
                   l1037 0087                     l1061 018D                     l1047 00BC  
                   l1039 008D                     l1071 0194                     l1063 018E  
                   l1055 017E                     l1049 00C1                     l1081 0199  
                   l1073 0195                     l1065 0191                     l1057 0188  
                   l1091 01A0                     l1083 019C                     l1075 0196  
                   l1067 0192                     l1059 018A                     l1093 01AB  
                   l1085 019D                     l1077 0197                     l1069 0193  
                   l1087 019E                     l1079 0198                     l1089 019F  
                   i1l62 0170                     i1l65 017D                     i1l58 014C  
                   i1l79 01CB                     _TMR2 0011                     _Step 0133  
                   _main 017E                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_Step 0070                    ?_main 0070  
        __end_of___awdiv 0087          ___awdiv@divisor 0072                    i1l911 0157  
                  i1l903 0133                    i1l921 017B                    i1l905 013A  
                  i1l913 0159                    i1l915 015E                    i1l907 014A  
                  i1l917 016E                    i1l909 014D                    i1l919 0171  
                  i1l971 01C9                    i1l963 01BA                    i1l973 01CA  
                  i1l965 01C0                    i1l967 01C1                    i1l969 01C6  
        ___awdiv@counter 0034                    u40_20 016E                    u40_21 016D  
                  u40_25 016A                    u41_20 017B                    u41_21 017A  
                  u41_25 0177                    u42_20 01C0                    u42_21 01BF  
                  u36_20 013A                    u36_21 0139                    u37_20 014A  
                  u37_21 0149                    u37_25 0146                    u38_20 0157  
                  u38_21 0156                    u38_25 0153                    u39_20 015E  
                  u39_21 015D                    _Step1 0024                    _Step2 0020  
                  pclath 000A               _Count_BOT1 002C               _Count_BOT2 0028  
             _Count_TOP1 002E               _Count_TOP2 002A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_Step 017E  
           __end_of_main 01BA                   ??_Step 0070                   ??_main 0079  
       __end_of_Speed_M1 0133         __end_of_Speed_M2 00E1         ___awdiv@dividend 0074  
                 _Dir_M1 0033                   _Dir_M2 0032                ??___awdiv 0076  
       ___awdiv@quotient 0036                   saved_w 007E  __end_of__initialization 001A  
         __pcstackCOMMON 0070               __pbssBANK0 0020               __pmaintext 017E  
              ?_Speed_M1 0038                ?_Speed_M2 0038               __pintentry 0004  
             ??_Speed_M1 0077               ??_Speed_M2 0077                  ___awdiv 001E  
                __ptext1 0087                  __ptext2 00E1                  __ptext3 001E  
                __ptext4 01BA                  __ptext5 0133                _T2CONbits 0012  
                clrloop0 01D3     end_of_initialization 001A                _PORTBbits 0006  
              _PORTDbits 0008                _TRISBbits 0086                _TRISDbits 0088  
    start_initialization 000F              __end_of_ISR 01D2                Speed_M1@x 0038  
              Speed_M2@x 0038              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0034                 ?___awdiv 0072        interrupt_function 0004  
              clear_ram0 01D2                 _PIE1bits 008C                 _PIR1bits 000C  
               _Speed_M1 00E1                 _Speed_M2 0087            _Count1_timer0 0079  
          _Count2_timer0 0030               _INTCONbits 000B                 intlevel1 0000  
